<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

	<parameters>
		<parameter key="rock.page_flow.container.filter.interface_aware_injection.class">Rock\Component\Configuration\Definition\Filter\InterfaceAwareInjectionFilter</parameter>
	</parameters>

    <services>
		<!-- Inject into InterfaceAware -->
		<!-- Inject Logger -->
		<service
			id="rock.page_flow.container.filter.interface.container"
			class="%rock.page_flow.container.filter.interface_aware_injection.class%"
		>
			<argument>interface.container_aware</argument>
			<argument>Rock\OnSymfony\HttpPageFlowBundle\Aware\IContainerAware</argument>
			<argument>setContainer</argument>
            <argument type="service" id="service_container"/>
			<tag
				name="rock.page_flow.container.filter"
			/>
		</service>
		<service
			id="rock.page_flow.container.filter.interface.form_factory_injection"
			class="%rock.page_flow.container.filter.interface_aware_injection.class%"
		>
			<argument>interface.form_factory_aware</argument>
			<argument>Rock\OnSymfony\HttpPageFlowBundle\Aware\IFormFactoryAware</argument>
			<argument>setFormFactory</argument>
			<argument type="service" id="form.factory"/>
			<tag
				name="rock.page_flow.container.filter"
			/>
		</service>
		<!-- Inject EntityManagerCollection -->
		<service
			id="rock.page_flow.container.filter.interface.entity_manager_collection_injection"
			class="%rock.page_flow.container.filter.interface_aware_injection.class%"
		>
			<argument>interface.entity_manager_collection_aware</argument>
			<argument>Rock\OnSymfony\HttpPageFlowBundle\Aware\IEntityManagerCollectionAware</argument>
			<argument>setEntityManagerCollection</argument>
			<argument>%doctrine.entity_managers%</argument>
			<tag
				name="rock.page_flow.container.filter"
			/>
		</service>
		<!-- Inject Logger -->
		<service
			id="rock.page_flow.container.filter.interface.logger"
			class="%rock.page_flow.container.filter.interface_aware_injection.class%"
		>
			<argument>interface.logger_aware</argument>
			<argument>Rock\OnSymfony\HttpPageFlowBundle\Aware\ILoggerAware</argument>
			<argument>setLogger</argument>
            <argument type="service" id="logger" on-invalid="null" />
			<tag
				name="rock.page_flow.container.filter"
			/>
		</service>
		<!--
		EventDispatcher is scope prototype, thus add by builder
		<service
			id="rock.page_flow.container.filter.interface.event_dispatcher_aware"
			class="%rock.page_flow.container.filter.interface_aware_injection.class%"
		>
			<argument>Rock\OnSymfony\HttpPageFlowBundle\Aware\IEventDispatcherAware</argument>
			<argument>setEventDispatcher</argument>
			<argument type="service" id="rock.page_flow.event_dispatcher"/>
			<tag
				name="rock.page_flow.container.filter"
			/>
		</service>
		-->
	</services>
</container>
